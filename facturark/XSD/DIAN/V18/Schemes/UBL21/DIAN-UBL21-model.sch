<?xml version="1.0" encoding="UTF-8"?>
<!-- Schematron binding rules generated by Eric Van Boxsom -->
<!-- Data binding to UBL syntax for model -->
<!-- Timestamp: 2019-02-20 15:55:29 -0300 -->
<pattern xmlns="http://purl.oclc.org/dsdl/schematron" id="UBL-model">
  <let name="rootLine" value="if (boolean(/Invoice)) then 'cac:InvoiceLine' else if (boolean(/CreditNote)) then 'cac:CreditNoteLine' else if (boolean(/DebitNote)) then 'cac:DebitNoteLine' else ''"></let>
  <!-- Validaciones Sobre las Extensiones  -->
  <rule flag="fatal" role="fatal" context="ext:UBLExtensions">
    <assert flag="fatal" test="exists(../ext:UBLExtensions)">[AA02]-XML no cumple con las personalizaciones de UBL-DIAN</assert>
    <assert flag="fatal" test="not(count(//sts:DianExtensions) &gt; 1)">[AA03]-Solamente puede haber una ocurrencia de un grupo UBLExtension conteniendo el grupo sts:DianExtensions</assert>
    <assert flag="fatal" test="not(count(//ds:Signature) &gt; 1)">[AA04]-Solamente puede haber una ocurrencia de un grupo UBLExtension conteniendo el grupo ds:Signature</assert>
    <assert flag="fatal" test="exists(ext:UBLExtension/ext:ExtensionContent/sts:DianExtensions)">[DA16]-XML no cumple con las personalizaciones de UBL-DIAN</assert>
    <assert flag="fatal" test="exists(ext:UBLExtension/ext:ExtensionContent/ds:Signature)">[DC01a]-No se encuentra el grupo ds:Signature</assert>
  </rule>
  <!-- Validaciones sobre el grupo DianExtensions  -->
  <rule flag="fatal" role="fatal" context="sts:DianExtensions">
    <assert flag="fatal" test="if (boolean(/Invoice)) then exists(sts:InvoiceControl/sts:InvoiceAuthorization) else true()">[DA17]- (R) No se encuentra el numero de resolucion del rango de numeracion otorgado</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then exists(sts:InvoiceControl/sts:AuthorizationPeriod/cbc:StartDate) else true()">[DA18]- (R) No se encuentra la fecha de inicio del rango otorgado</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then exists(sts:InvoiceControl/sts:AuthorizationPeriod/cbc:EndDate) else true()">[DA19]- (R) No se encuentra la fecha de fin del rango otorgado</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then exists(sts:InvoiceControl/sts:AuthorizedInvoices/sts:From) else true()">[DA20]- (R) No se encuentra el numero inicial del rango otorgado</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then exists(sts:InvoiceControl/sts:AuthorizedInvoices/sts:To) else true()">[DA21]- (R) No se encuentra el numero final del rango otorgado</assert>
    <assert flag="fatal" test="exists(sts:SoftwareProvider/sts:ProviderID)">[DA22]- (R) No se encuentra el NIT Proveedor tecnologico</assert>
    <assert flag="fatal" test="exists(sts:SoftwareProvider/sts:ProviderID/@schemeID)">[DA23]- (R) No se encuentra el attributo schemeID del proveedor tecnologico</assert>
    <assert flag="fatal" test="exists(sts:SoftwareProvider/sts:SoftwareIDs)">[DA24]- (R) No se encuentra el codigo de software</assert>
    <assert flag="fatal" test="exists(sts:SoftwareSecurityCode)">[DA25]- (R) No se encuentra el codigo de seguridad del software</assert>
    <assert flag="fatal" test="exists(sts:AuthorizationProvider/sts:AuthorizationProviderID)">[DA26]- (R) No se encuentra el NIT de la DIAN</assert>
    <assert flag="fatal" test="exists(sts:QRCode)">[DA27]- (R) No se encuentra el campo con el valor del codigo QR</assert>
  </rule>
  <!-- Validaciones del digito validador del Proveedor Tecnologico -->
  <rule flag="fatal" role="fatal" context="sts:ProviderID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HD04b]-DV del NIT del Proveedor Tecnologico : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HD05]- (R) NIT del Proveedor Tecnologico debe ser informado con dígito verificador (@schemeName debe ser “31”)</assert>
  </rule>
  <!-- Validaciones del digito validador del Proveedor Autorizado -->
  <rule flag="fatal" role="fatal" context="sts:AuthorizationProviderID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',sts:AuthorizationProviderID/@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HD04b]-DV del NIT del Proveedor Autorizado : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HD05]- (R) NIT del Proveedor Autorizado debe ser informado con dígito verificador (@schemeName debe ser “31”)</assert>
  </rule>
  <!-- Validaciones sobre el grupo de la Firma digital  -->
  <rule flag="fatal" role="fatal" context="ds:Signature">
    <assert flag="fatal" test="exists(ds:SignedInfo)">[DC02]- (R) El campo ds:SignedInfo esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:CanonicalizationMethod)">[DC03]- (R) El campo ds:SignedInfo/ds:CanonicalizationMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:SignatureMethod)">[DC04]- (R) El campo ds:SignedInfo/ds:SignatureMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference)">[DC05]- (R) El campo ds:SignedInfo/ds:Reference esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:Transforms)">[DC06]- (R) El campo ds:SignedInfo/ds:Reference/ds:Transforms esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:Transforms/ds:Transform)">[DC07]- (R) El campo ds:SignedInfo/ds:Reference/ds:Transforms/ds:TransForm esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestMethod)">[DC08]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestValue)">[DC09]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference)">[DC10]- (R) El campo ds:SignedInfo/ds:Reference esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestMethod)">[DC11]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestValue)">[DC12]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference)">[DC13]- (R) El campo ds:SignedInfo/ds:Reference esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestMethod)">[DC14]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignedInfo/ds:Reference/ds:DigestValue)">[DC15]- (R) El campo ds:SignedInfo/ds:Reference/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:SignatureValue)">[DC16]- (R) El campo ds:SignatureValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:KeyInfo)">[DC17]- (R) El campo ds:KeyInfo esta faltando</assert>
    <assert flag="fatal" test="exists(ds:KeyInfo/ds:X509Data)">[DC18]- (R) El campo ds:KeyInfo/ds:X509Data esta faltando</assert>
    <assert flag="fatal" test="exists(ds:KeyInfo/ds:X509Data/ds:X509Certificate)">[DC19]- (R) El campo ds:KeyInfo/ds:X509Data/ds:X509Certificate esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object)">[DC20]- (R) El campo ds:Object esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties)">[DC21]- (R) El campo ds:Object/xades:QualifyingProperties esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties)">[DC22]- (R) El campo ds:Object/xades:QualifyingProperties esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties)">[DC23]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningTime)">[DC24]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningTime esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate)">[DC25]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert)">[DC26]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest)">[DC27]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod)">[DC28]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue)">[DC29]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial)">[DC30]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName)">[DC31]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber)">[DC32]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert)">[DC33]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest)">[DC34]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod)">[DC35]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue)">[DC36]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial)">[DC37]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName)">[DC38]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber)">[DC39]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert)">[DC40]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest)">[DC41]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod)">[DC42]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue)">[DC43]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:CertDigest/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial)">[DC44]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName)">[DC45]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509IssuerName esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber)">[DC46]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SigningCertificate/xades:Cert/xades:IssuerSerial/ds:X509SerialNumber esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier)">[DC47]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId)">[DC48]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyId)">[DC49]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyId esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyId/xades:Identifier)">[DC50]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyId/xades:Identifier esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash)">[DC51]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash/ds:DigestMethod)">[DC52]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash/ds:DigestMethod esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash/ds:DigestValue)">[DC53]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignaturePolicyIdentifier/xades:SignaturePolicyId/xades:SigPolicyHash/ds:DigestValue esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole)">[DC54]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole/xades:ClaimedRoles)">[DC55]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole/xades:ClaimedRoles esta faltando</assert>
    <assert flag="fatal" test="exists(ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole/xades:ClaimedRoles/xades:ClaimedRole)">[DC56]- (R) El campo ds:Object/xades:QualifyingProperties/xades:SignedProperties/xades:SignedSignatureProperties/xades:SignerRole/xades:ClaimedRoles/xades:ClaimedRole esta faltando</assert>
  </rule>
  <!-- Validaciones de Version UBL y perfilamiento -->
  <rule flag="fatal" role="fatal" context="cbc:UBLVersionID">
    <assert flag="fatal" test=". = 'UBL 2.1'">[AA05]- (R) UBLVersionID : '<value-of select="."/>' no contiene el literal “UBL 2.1”</assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cbc:ProfileID">
    <assert flag="fatal" test=". = 'DIAN 2.0'">[AA07]- (R) ProfileID : '<value-of select="."/>' no contiene el literal “DIAN 2.0”</assert>
  </rule>
  <!-- Validaciones sobre el Prefijo del documento  -->
  <rule flag="warning" role="warning" context="sts:Prefix">
    <assert flag="warning" test=". = //cac:AccountingSupplierParty//cac:CorporateRegistrationScheme/cbc:ID">[DA10]- (R) '<value-of select="."/>' Debe ser igual al código de la sucursal correspondiente a este punto de facturación '<value-of select="//cac:AccountingSupplierParty//cac:CorporateRegistrationScheme/cbc:ID"/>'</assert>
  </rule>
  <!-- Validaciones sobre el numero del documento  -->
  <rule flag="fatal" role="fatal" context="/descendant::cbc:ID[1]">
    <assert flag="fatal" test="not(matches(., '\s')) and not(contains(., '-'))">[AA08a]- (R) Número de factura : '<value-of select="."/>' contiene caracteres adicionales como espacios o guiones</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then number(substring-after(., //sts:Prefix)) &gt; number(//sts:From) else true()">[AA08b]- (R) Número de factura : '<value-of select="."/>' inferior al inicio del rango de numeración otorgado: '<value-of select="//sts:From"/>'</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then number(substring-after(., //sts:Prefix)) &lt; number(//sts:To) else true()">[AA08c]- (R) Número de factura : '<value-of select="."/>' superior al final del rango de numeración otorgado: '<value-of select="//sts:To"/>'</assert>
  </rule>
  <!-- Validaciones sobre la fecha de emision del documento -->
  <rule flag="fatal" role="fatal" context="/descendant::cbc:IssueDate[1]">
    <assert flag="fatal" test="xs:dateTime(concat(., 'T', /descendant::cbc:IssueTime[1])) &lt; current-dateTime() + xs:dayTimeDuration('P10DT0H')">[AA12b]- (R) Fecha de emision : '<value-of select="concat(., 'T', /descendant::cbc:IssueTime[1])"/>' es posterior a diez días calendario contados desde la fecha de transmisión del archivo para su validacón : '<value-of select="current-dateTime()"/>'</assert>
    <assert flag="fatal" test="xs:dateTime(concat(., 'T', /descendant::cbc:IssueTime[1])) &gt; current-dateTime() - xs:dayTimeDuration('P5DT0H')">[AA12c]- (R) Fecha de emision : '<value-of select="concat(., 'T', /descendant::cbc:IssueTime[1])"/>' es anterior a cinco días calendario restados de la fecha actual : '<value-of select="current-dateTime()"/>'</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then xs:date(.) &gt;= xs:date(//sts:InvoiceControl/sts:AuthorizationPeriod/cbc:StartDate) else true()">[DA07]- (R) Fecha de emisión : '<value-of select="."/>' anterior al la fecha de inicio de la autorización de la numeración : '<value-of select="//sts:InvoiceControl/sts:AuthorizationPeriod/cbc:StartDate"/>'</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then xs:date(.) &lt;= xs:date(//sts:InvoiceControl/sts:AuthorizationPeriod/cbc:EndDate) else true()">[DA08]- (R) Fecha de emisión :'<value-of select="."/>' posterior al la fecha final de la autorización de la numeración : '<value-of select="//sts:InvoiceControl/sts:AuthorizationPeriod/cbc:EndDate"/>'</assert>
    </rule>
  <!-- Validaciones sobre la hora de emision del documento-->
  <rule flag="fatal" role="fatal" context="/descendant::cbc:IssueTime[1]">
    <let name="hour" value="number(substring(.,1,2))"/>
    <let name="minute" value="number(substring(.,4,2))"/>
    <let name="second" value="number(substring(.,7,2))"/>
    <let name="timezone" value="string(substring(.,9,6))"/>
    <assert flag="fatal" test="string-length(.)=14 and substring(.,3,1)=':' and substring(.,6,1)=':' and substring(.,9,6)='-05:00'">[AA13a]- (R) Hora del envio : '<value-of select="."/>' no esta en el formato autorizado HH:MM:SS-05-00</assert>
    <assert flag="fatal" test="$hour>=0 and $hour&lt;=23">[AA13b]- (R) Hora del envio : '<value-of select="$hour"/>' debe ser entre 0 y 23</assert>
    <assert flag="fatal" test="$minute>=0 and $minute&lt;=59">[AA13c]- (R) Minuto del envio : '<value-of select="$minute"/>' debe ser entre 0 y 59</assert>
    <assert flag="fatal" test="$second>=0 and $second&lt;=59">[AA13d]- (R) Minuto del envio : '<value-of select="$second"/>' debe ser entre 0 y 59</assert>
    <assert flag="fatal" test="$timezone = '-05:00'">[AA13e]- (R) Zona horaria del envio : '<value-of select="$timezone"/>' debe ser de Colombia (-05:00)</assert>
  </rule>
  <!-- Validaciones cantidad lineas de detalle -->
  <rule flag="fatal" role="fatal" context="cbc:LineCountNumeric">
    <assert flag="fatal" test=". = count(//cac:InvoiceLine) or . = count(//cac:CreditNoteLine) or . = count(//cac:DebitNoteLine)">[AA18]- (R) LineCountNumeric : '<value-of select="."/>' diferente del número de ocurrencias del grupo /Invoice/cac:InvoiceLine : '<value-of select="count(//cac:InvoiceLine)"/>'</assert>
  </rule>
  <!-- Validaciones de referencias nota credito y debito -->
  <rule flag="warning" role="fatal" context="cac:DiscrepancyResponse">
    <assert flag="warning" test="exists(cbc:ReferenceID)">[HF02]- (N) : No se encuentra el prefijo y numero del documento referenciado</assert>
    <assert flag="warning" test="exists(cbc:ResponseCode)">[HF02]- (N) : No se encuentra el codigo de razon de la nota.</assert>
  </rule>
  <!-- Validaciones de referencias factura de contingencia -->
  <rule flag="fatal" role="fatal" context="cac:AdditionalDocumentReference">
    <assert flag="fatal" test="if (/Invoice/cbc:InvoiceTypeCode = '03') then exists(cbc:ID) else true()">[HH02]- (R)  : El prefijo y numero de la factura relacionada debe aparecer</assert>
    <assert flag="fatal" test="if (/Invoice/cbc:InvoiceTypeCode = '03') then exists(cbc:UUID) else true()">[HH03]- (R)  : El CUFE de la factura relacionada debe aparecer</assert>
  </rule>
  <!-- Validaciones sobre el emisor del documento -->
  <rule flag="fatal" role="fatal" context="cac:AccountingSupplierParty/cac:PartyTaxScheme//cbc:CompanyID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',cac:AccountingSupplierParty/cac:PartyTaxScheme//cbc:CompanyID/@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HC04]- (R) DV del NIT del emisor : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HC05]- (R) NIT del emisor debe ser informado con dígito verificador (si @schemeID es “31”)</assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:AccountingSupplierParty">
    <assert test="exists(cbc:AdditionalAccountID)">[EA02] (R) - No se encuentra el Tipo de organización</assert>
    <assert test="exists(cac:Party)">[EA03] (R) - No se encuentra el grupo Party</assert>
  </rule>
  <!-- Validaciones sobre el receptor del documento -->
  <rule flag="fatal" role="fatal" context="cac:AccountingCustomerParty/cac:PartyTaxScheme//cbc:CompanyID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',cac:AccountingCustomerParty/cac:PartyTaxScheme//cbc:CompanyID/@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HD04b]-DV del NIT del adquiriente : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HD05]- (R) NIT del adquiriente debe ser informado con dígito verificador (@schemeName debe ser “32”)</assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:AccountingSupplierParty">
    <assert test="exists(cbc:AdditionalAccountID)">[EA02] (R) - No se encuentra el Tipo de organización</assert>
    <assert test="exists(cac:Party)">[EA03] (R) - No se encuentra el grupo Party</assert>
  </rule>
  <!-- Validaciones sobre el transportista -->
  <rule flag="fatal" role="fatal" context="cac:DeliveryParty/cac:PartyTaxScheme//cbc:CompanyID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',cac:DeliveryParty/cac:PartyTaxScheme//cbc:CompanyID/@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HD04b]-DV del NIT del transportista : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HD05]- (R) NIT del transportista debe ser informado con dígito verificador (@schemeName debe ser “32”)</assert>
  </rule>
  <!-- Validacion sobre los descuentos y cargos -->
  <rule flag="fatal" role="fatal" context="cac:AllowanceCharge[not(ancestor::cac:InvoiceLine) or not(ancestor::cac:CreditNoteLine) or not(ancestor::cac:DebitNoteLine)]">
    <assert flag="fatal" test="exists(cbc:ChargeIndicator) and cbc:ChargeIndicator = 'true' or cbc:ChargeIndicator = 'false'">[JA02] (R) - Rechazo si este elemento contiene una información diferente de “true” o “false”</assert>
    <assert flag="fatal" test="if (/Invoice/cbc:InvoiceTypeCode = '02') then exists(cbc:AllowanceChargeReason) else true()">[JA03] (R) - AllowanceChargeReason Obligatorio si es factura internacional</assert>
    <assert flag="warning" test="exists(cbc:MultiplierFactorNumeric) and number(cbc:MultiplierFactorNumeric) &lt;= 100">[JA04] (N) -Notificación: si este elemento > 100 </assert>
    <assert flag="warning" test="if (cbc:ChargeIndicator = false()) then number(cbc:Amount) &lt; number(cbc:BaseAmount) else true()">[JA05] (N) -Notificación: si monto del descuento es superior al monto base del calculo del descuento</assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then if (cbc:ChargeIndicator = false()) then exists(cbc:AllowanceChargeReasonCode) else true() else true()">[JA07] (R) - Obligatorio de informar si es descuento a nivel de factura.</assert>
    <!--<assert flag="warning" test="cbc:Amount[cbc:ChargeIndicator = 'false'] &lt; cbc:BaseAmount">[JA07] (R) -Notificación: si monto del descuento es superior al monto base del calculo del descuento</assert>-->
  </rule>
  <!-- Validaciones sobre los impuestos del documento -->
  <rule flag="fatal" role="fatal" context="cac:TaxTotal[not(ancestor::cac:InvoiceLine) or not(ancestor::cac:CreditNoteLine) or not(ancestor::cac:DebitNoteLine)]">
    <let name="InvoicedQtyImpTimbre" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:InvoicedQuantity | //cac:CreditNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:CreditedQuantity | //cac:DebitNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:DebitedQuantity"></let>
    <let name="InvoicedQtyImpBolsa" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:InvoicedQuantity | //cac:CreditNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:CreditedQuantity | //cac:DebitNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:DebitedQuantity"></let>
    <let name="InvoicedQtyImpCarbono" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:InvoicedQuantity | //cac:CreditNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:CreditedQuantity | //cac:DebitNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:DebitedQuantity"></let>
    <let name="InvoicedQtyImpCombustible" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:InvoicedQuantity | //cac:CreditNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:CreditedQuantity | //cac:DebitNoteLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:DebitedQuantity"></let>
    <!-- cac:TaxTotal/cbc:TaxAmount = Suma de todos los tributos del mismo tipo  -->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount)"/>' </assert>
    <!-- cac:TaxTotal/cbc:TaxAmount = (Monto base impuesto * tasa) / 100  -->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:Percent) div 100)"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:Percent) div 100)"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:Percent) div 100)"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxableAmount * ../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:Percent) div 100)"/></assert>
    <!-- cac:TaxTotal/cbc:TaxAmount = (Cantidad * Impuesto Unico por unidad) -->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))"/></assert>
    <!--<assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:PerUnitAmount * $InvoicedQtyImpCarbono))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:PerUnitAmount * $InvoicedQtyImpCarbono))"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:PerUnitAmount * $InvoicedQtyImpCombustible))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:PerUnitAmount * $InvoicedQtyImpCombustible))"/></assert>-->
  </rule>
  <!-- Validaciones sobre los impuestos retenidos del documento (Header)-->
  <rule flag="fatal" role="fatal" context="cac:WithholdingTaxTotal">
    <!-- cac:WithholdingTaxTotal/cbc:TaxAmount = Suma de todos los tributos del mismo tipo  -->
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount = sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount)) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount = sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount)) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount = sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount)) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount)"/>' </assert>
    <!-- cac:WithholdingTaxTotal/cbc:TaxAmount = (Monto base impuesto * tasa) / 100  -->
    <!--  every $i in /Invoice/cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID= '06']/cac:TaxSubtotal satisfies 
    $i/cbc:TaxAmount = 
    ($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100 -->
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <!--<assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount = ((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:Percent) div 100)"/></assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount = ((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:Percent) div 100)"/></assert>-->
  </rule>
  <!-- Validaciones sobre el tipo de cambio -->
  <rule flag="fatal" role="fatal" context="cac:PaymentExchangeRate">
    <assert flag="fatal" test="exists(cbc:SourceCurrencyCode)">[M01] (R) - No se encuentra el campo cbc:SourceCurrencyCode</assert>
    <assert flag="fatal" test="cbc:SourceCurrencyCode = //cbc:DocumentCurrencyCode">[M01] (R) - Rechazo si no es igual al elemento cbc:DocumentCurrencyCode</assert>
    <assert flag="fatal" test="cbc:SourceCurrencyBaseRate = 1.00">[M02] (R) - Rechazo si trae valor diferente a 1.00</assert>
    <assert flag="fatal" test="if (//cbc:DocumentCurrencyCode != 'COP') then (cbc:TargetCurrencyCode = 'COP') else true()">[M03] (R) - Debe ir diligenciado en COP, si el cbc:DocumentCurrencyCode es diferente a COP</assert>
    <assert flag="fatal" test="cbc:TargetCurrencyBaseRate = 1.00">[M04] (R) - Rechazo si trae valor diferente a 1.00</assert>
    <assert flag="fatal" test="exists(cbc:CalculationRate)">[M05] (R) - No se encuentra el campo cbc:CalculationRate</assert>
    <assert flag="fatal" test="exists(cbc:Date)">[M06] (R) - No se encuentra el campo cbc:Date</assert>
  </rule>
  <!-- Validaciones sobre los totales del documento -->
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:LineExtensionAmount | cac:RequestedMonetaryTotal/cbc:LineExtensionAmount">
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = (sum(../../cac:InvoiceLine/cbc:LineExtensionAmount)) else true()">[IB02]- (R) Valor bruto total de la factura antes de tributos <value-of select="."/> diferente de la suma de los valores de las líneas de la factura que contienen valor comercial: <value-of select="(sum(../..//cac:InvoiceLine/cbc:LineExtensionAmount))"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/CreditNote)) then . = (sum(../../cac:CreditNoteLine/cbc:LineExtensionAmount)) else true()">[IB02]- (R) Valor bruto total de la factura antes de tributos <value-of select="."/> diferente de la suma de los valores de las líneas de la factura que contienen valor comercial: <value-of select="(sum(../..//cac:InvoiceLine/cbc:LineExtensionAmount))"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/DebitNote)) then . = (sum(../../cac:DebitNoteLine/cbc:LineExtensionAmount)) else true()">[IB02]- (R) Valor bruto total de la factura antes de tributos <value-of select="."/> diferente de la suma de los valores de las líneas de la factura que contienen valor comercial: <value-of select="(sum(../..//cac:InvoiceLine/cbc:LineExtensionAmount))"/>
    </assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:TaxExclusiveAmount | cac:RequestedMonetaryTotal/cbc:TaxExclusiveAmount">
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = sum(../../cac:InvoiceLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount) else true()">[IB03]- (R) Base imponible para el cálculo de los tributos '<value-of select="."/>' diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : '<value-of select="sum(../../cac:InvoiceLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount)"/>'
    </assert>
    <assert flag="fatal" test="if (boolean(/CreditNote)) then . = sum(../../cac:CreditNoteLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount) else true()">[IB03]- (R) Base imponible para el cálculo de los tributos '<value-of select="."/>' diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : '<value-of select="sum(../../cac:CreditNoteLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount)"/>'
    </assert>
    <assert flag="fatal" test="if (boolean(/DebitNote)) then . = sum(../../cac:DebitNoteLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount) else true()">[IB03]- (R) Base imponible para el cálculo de los tributos '<value-of select="."/>' diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : '<value-of select="sum(../../cac:DebitNoteLine/cac:TaxTotal/cac:TaxSubtotal/cbc:TaxableAmount)"/>'
    </assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:TaxInclusiveAmount | cac:RequestedMonetaryTotal/cbc:TaxInclusiveAmount">
    <let name="SumGlobalTaxFE" value="sum(../..//cac:TaxTotal[not(ancestor::cac:InvoiceLine)]/cbc:TaxAmount)"/>
    <let name="SumGlobalTaxNC" value="sum(../..//cac:TaxTotal[not(ancestor::cac:CreditNoteLine)]/cbc:TaxAmount)"/>
    <let name="SumGlobalTaxND" value="sum(../..//cac:TaxTotal[not(ancestor::cac:DebitNoteLine)]/cbc:TaxAmount)"/>
    <assert flag="fatal" test="if (boolean(/Invoice)) then round(number(../cbc:LineExtensionAmount + $SumGlobalTaxFE)) = round(number(.)) else true()">[IB04]- (R) Monto Incluyendo Impuesto <value-of select="."/> diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : <value-of select="(../cbc:LineExtensionAmount + $SumGlobalTaxFE)"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/CreditNote)) then round(number(../cbc:LineExtensionAmount + $SumGlobalTaxNC)) = round(number(.)) else true()">[IB04]- (R) Monto Incluyendo Impuesto <value-of select="."/> diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : <value-of select="(../cbc:LineExtensionAmount + $SumGlobalTaxFE)"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/DebitNote)) then round(number(../cbc:LineExtensionAmount + $SumGlobalTaxND)) = round(number(.)) else true()">[IB04]- (R) Monto Incluyendo Impuesto <value-of select="."/> diferente del valor bruto total de la factura, sumado a los cargos totales a la facutra, y restado de los descuentos totales a la factura : <value-of select="(../cbc:LineExtensionAmount + $SumGlobalTaxFE)"/>
    </assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:AllowanceTotalAmount | cac:RequestedMonetaryTotal/cbc:AllowanceTotalAmount">
    <let name="SumTotalAllowanceFE" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <let name="SumTotalAllowanceNC" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:CreditNoteLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <let name="SumTotalAllowanceND" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:DebitNoteLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = $SumTotalAllowanceFE else true()">[IB05]- (R) Total descuentos <value-of select="."/> diferente de la suma de todos los descuentos aplicados al total de la factura : <value-of select="$SumTotalAllowanceFE"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = $SumTotalAllowanceNC else true()">[IB05]- (R) Total descuentos <value-of select="."/> diferente de la suma de todos los descuentos aplicados al total de la factura : <value-of select="$SumTotalAllowanceNC"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = $SumTotalAllowanceND else true()">[IB05]- (R) Total descuentos <value-of select="."/> diferente de la suma de todos los descuentos aplicados al total de la factura : <value-of select="$SumTotalAllowanceND"/>
    </assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:ChargeTotalAmount | cac:RequestedMonetaryTotal/cbc:ChargeTotalAmount">
    <let name="SumTotalChargeFE" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <let name="SumTotalChargeNC" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:CreditNoteLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <let name="SumTotalChargeND" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:DebitNoteLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = $SumTotalChargeFE else true()" >[IB06]- (R) Total cargos <value-of select="."/> diferente de la suma de todos los cargos aplicados al total de la factura : <value-of select="$SumTotalChargeFE"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/CreditNote)) then . = $SumTotalChargeNC else true()" >[IB06]- (R) Total cargos <value-of select="."/> diferente de la suma de todos los cargos aplicados al total de la factura : <value-of select="$SumTotalChargeNC"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/DebitNote)) then . = $SumTotalChargeND else true()" >[IB06]- (R) Total cargos <value-of select="."/> diferente de la suma de todos los cargos aplicados al total de la factura : <value-of select="$SumTotalChargeND"/>
    </assert>
  </rule>
  <rule flag="fatal" role="fatal" context="cac:LegalMonetaryTotal/cbc:PayableAmount | cac:RequestedMonetaryTotal/cbc:PayableAmount">
    <let name="TaxInclusiveAmount" value="../..//cbc:TaxInclusiveAmount"/>
    <let name="SumTotalAllowanceFE" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <let name="SumTotalAllowanceNC" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <let name="SumTotalAllowanceND" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'false']/cbc:Amount)"/>
    <let name="SumTotalChargeFE" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:InvoiceLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <let name="SumTotalChargeNC" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:CreditNoteLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <let name="SumTotalChargeND" value="sum(../..//cac:AllowanceCharge[not(ancestor::cac:DebitNoteLine)][cbc:ChargeIndicator = 'true']/cbc:Amount)"/>
    <let name="PayableAmountFE" value="format-number(xs:decimal($TaxInclusiveAmount - $SumTotalAllowanceFE + $SumTotalChargeFE),'#0.00')"/>
    <let name="PayableAmountNC" value="format-number(xs:decimal($TaxInclusiveAmount - $SumTotalAllowanceNC + $SumTotalChargeNC),'#0.00')"/>
    <let name="PayableAmountND" value="format-number(xs:decimal($TaxInclusiveAmount - $SumTotalAllowanceND + $SumTotalChargeND),'#0.00')"/>
    <assert flag="fatal" test="if (boolean(/Invoice)) then . = $PayableAmountFE else true()" >[IB09]- (R) Total de la factura <value-of select="."/> diferente de la suma de Total valor bruto + Total Tributos - Total Tributo Retenidos - Anticipos (+/-) Redondeos : <value-of select="$PayableAmountFE"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/CreditNote)) then . = $PayableAmountNC else true()" >[IB09]- (R) Total de la factura <value-of select="."/> diferente de la suma de Total valor bruto + Total Tributos - Total Tributo Retenidos - Anticipos (+/-) Redondeos : <value-of select="$PayableAmountNC"/>
    </assert>
    <assert flag="fatal" test="if (boolean(/DebitNote)) then . = $PayableAmountND else true()" >[IB09]- (R) Total de la factura <value-of select="."/> diferente de la suma de Total valor bruto + Total Tributos - Total Tributo Retenidos - Anticipos (+/-) Redondeos : <value-of select="$PayableAmountND"/>
    </assert>
  </rule>
  <!-- Validaciones sobre las lineas de detalle del documento-->
  <rule flag="fatal" role="fatal" context="cac:InvoiceLine | cac:CreditNoteLine | cac:DebitNoteLine">
    <assert flag="warning" test="count(cbc:ID) = count(distinct-values(cbc:ID))">[AB02a]- (N) Más de un grupo conteniendo el elemento /de:Invoice/de:InvoiceLine/cbc:ID con la misma información</assert>
    <assert flag="warning" test="count(cbc:ID) = 1">[AB02b]- (N) Los números de línea de factura utilizados en los diferentes grupos no son consecutivos, empezando con “1”</assert>
    <assert flag="warning" test="exists(cbc:LineExtensionAmount)">[AB02f]- (N) No se encuentra el campo cbc:LineExtensionAmount</assert>
    <assert flag="warning" test="if (boolean(cac:AllowanceCharge[cbc:ChargeIndiator = 'false']) and boolean(cac:AllowanceCharge[cbc:ChargeIndicator = 'true'])) then cbc:LineExtensionAmount = ((cac:Price/cbc:PriceAmount + cac:AllowanceCharge[cbc:ChargeIndicator = 'true']/cbc:Amount - cac:AllowanceCharge[cbc:ChargeIndicator = 'false']/cbc:Amount) * cac:Price/cbc:BaseQuantity) else if (boolean(cac:AllowanceCharge[cbc:ChargeIndiator = 'false'])) then cbc:LineExtensionAmount = ((cac:Price/cbc:PriceAmount - cac:AllowanceCharge[cbc:ChargeIndiator = 'false']/cbc:Amount) * cac:Price/cbc:BaseQuantity) else if (boolean(cac:AllowanceCharge[cbc:ChargeIndiator = 'true'])) then cbc:LineExtensionAmount = ((cac:Price/cbc:PriceAmount + cac:AllowanceCharge[cbc:ChargeIndiator = 'true']/cbc:Amount) * cac:Price/cbc:BaseQuantity) else true()">[AB04]- (N) Valor total de la línea, libre de tributos, diferente del producto de la cantidad por el precio unitario, considerados los cargos y los descuentos aplicados en esta línea</assert>
    <assert flag="warning" test="exists(cac:Item/cbc:Description)">[AB02d]- (N) No se encuentra el campo cbc:Description</assert>
    <assert flag="warning" test="if (boolean(/Invoice)) then exists(cbc:FreeOfChargeIndicator) else true()">[AB02e]- (N) No se encuentra el campo cbc:FreeOfChargeIndicator</assert>
    <assert flag="warning" test="exists(cac:Price/cbc:PriceAmount)">[AB02g]- (N) No se encuentra el campo cbc:PriceAmount</assert>
    <assert flag="warning" test="exists(cbc:InvoicedQuantity) or exists(cbc:CreditedQuantity) or exists(cbc:DebitedQuantity)">[AB02h]- (N) No se encuentra el campo cbc:InvoicedQuantity</assert>
    <assert flag="warning" test="exists(cac:Price/cbc:BaseQuantity)">[AB02i]- (N) No se encuentra el campo cbc:BaseQuantity</assert>
  </rule>
  <!-- Validaciones sobre los descuentos a nivel de linea de detalle-->
  <rule flag="fatal" role="fatal" context="cac:InvoiceLine/cac:AllowanceCharge">
    <assert flag="fatal" test="exists(cbc:ChargeIndicator) and cbc:ChargeIndicator = 'true' or cbc:ChargeIndicator = 'false'">[JA02] (R) - Rechazo si este elemento contiene una información diferente de “true” o “false”</assert>
    <assert flag="fatal" test="if (/Invoice/cbc:InvoiceTypeCode = '02') then exists(cbc:AllowanceChargeReason) else true()">[JA03] (R) - AllowanceChargeReason Obligatorio si es factura internacional</assert>
    <assert flag="warning" test="if (cbc:ChargeIndicator = false()) then number(cbc:Amount) &lt;= number(cbc:BaseAmount) else true()">[JA05] (N) -Notificación: si monto del descuento es superior al monto base del calculo del descuento</assert>
    <assert flag="warning" test="exists(cbc:MultiplierFactorNumeric)">[JA07] (R) -No se encuentra cbc:MultiplierFactorNumeric</assert>
    <assert flag="warning" test="number(cbc:MultiplierFactorNumeric) &lt;= 100">[JA07] (R) -Notificación: si cbc:MultiplierFactorNumeric : '<value-of select="./cbc:MultiplierFactorNumeric"/>' > 100 </assert>
  </rule>
  <!-- Validaciones sobre los impuestos del documento (Detalle) -->
  <rule flag="fatal" role="fatal" context="cac:InvoiceLine/cac:TaxTotal | cac:CreditNoteLine/cac:TaxTotal | cac:DebitNoteLine/cac:TaxTotal">
    <let name="InvoicedQtyImpTimbre" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:InvoicedQuantity"></let>
    <let name="InvoicedQtyImpBolsa" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:InvoicedQuantity"></let>
    <let name="InvoicedQtyImpCarbono" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:InvoicedQuantity"></let>
    <let name="InvoicedQtyImpCombustible" value="//cac:InvoiceLine[cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:InvoicedQuantity"></let>
    <!-- cac:TaxTotal/cbc:TaxAmount = Suma de todos los tributos del mismo tipo  -->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24') then (round(../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount) = round(sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount)"/>' </assert>
    <!-- cac:TaxTotal/cbc:TaxAmount = (Monto base impuesto * tasa) / 100  -->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01') then (every $i in ../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '01']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02') then (every $i in ../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '02']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03') then (every $i in ../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '03']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04') then (every $i in ../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '04']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <!-- cac:TaxTotal/cbc:TaxAmount = (Cantidad * Impuesto Unico por unidad) -->
    <!--<assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:PerUnitAmount * $InvoicedQtyImpTimbre))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '21']/cbc:PerUnitAmount * $InvoicedQtyImpTimbre))"/></assert>-->
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpBolsa))"/></assert>
    <!--<assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '23']/cbc:PerUnitAmount * $InvoicedQtyImpCarbono))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpCarbono))"/></assert>
    <assert flag="fatal" test="if (../cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24') then (../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:TaxAmount = ((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '24']/cbc:PerUnitAmount * $InvoicedQtyImpCombustible))) else true()">[HB07]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:TaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:TaxAmount"/> es diferente del producto de la cantidad de items vendidos aplicado sobre el impuesto unico por unidad: <value-of select="((../cac:TaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '22']/cbc:PerUnitAmount * $InvoicedQtyImpCombustible))"/></assert>-->
  </rule>
  <!-- Validaciones sobre los impuestos retenidos del documento (Detalle)-->
  <rule flag="fatal" role="fatal" context="cac:InvoiceLine/cac:WithholdingTaxTotal">
    <!-- cac:WithholdingTaxTotal/cbc:TaxAmount = Suma de todos los tributos del mismo tipo  -->
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05') then (round(../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount) = round(sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (round(../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount) = round(sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount)"/>' </assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (round(../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount) = round(sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount))) else true()">[HB02]- (R) Valor total de un tributo : '<value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/>' no corresponde a la suma de todas las informaciones correspondentes a cada una de las tarifas informadas en este documento para este tributo: '<value-of select="sum(../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount)"/>' </assert>
    <!-- cac:WithholdingTaxTotal/cbc:TaxAmount = (Monto base impuesto * tasa) / 100  -->
    <!-- every $i in /Invoice/cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID= '06']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = ($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100
    -->
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '05']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (every $i in ../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cac:TaxSubtotal satisfies $i/cbc:TaxAmount = (($i/cbc:TaxableAmount * $i/cac:TaxCategory/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible</assert>
    <!--<assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount = ((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '06']/cbc:Percent) div 100)"/></assert>
    <assert flag="fatal" test="if (../cac:WithholdingTaxTotal/cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07') then (../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount = ((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:Percent) div 100)) else true()">[HB06]- (R) El valor del tributo correspondiente a una de las tarifas <value-of select="../cac:WithholdingTaxTotal[cac:TaxSubtotal/cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxAmount"/> es diferente del producto del porcentaje aplicado sobre la base imponible: <value-of select="((../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:TaxableAmount * ../cac:WithholdingTaxTotal/cac:TaxSubtotal[cac:TaxCategory/cac:TaxScheme/cbc:ID = '07']/cbc:Percent) div 100)"/></assert>-->
  </rule>
  <!-- Validaciones sobre los Items vendidos-->
  <rule flag="fatal" role="fatal" context="cac:Item">
    <assert flag="warning" test="if (/Invoice/cbc:InvoiceTypeCode = '02') then exists(cbc:BrandName) else true()" >[FA05]- (N) Debe ser informada la marca del artículo en caso de factura internacional</assert>
    <assert flag="warning" test="if (/Invoice/cbc:InvoiceTypeCode = '02') then exists(cbc:ModelName) else true()">[FA06]- (N) Debe ser informado el modelo del artículo en caso de factura internacional</assert>
  </rule>
  <!-- Validaciones sobre el NIT Mandante -->
  <rule flag="fatal" role="fatal" context="cac:PowerOfAttorney/cac:AgentParty/cac:PartyIdentification/cbc:ID">
    <let name="nitwithout" value="."/>
    <let name="nitwithdv" value="concat(.,'-',cac:PowerOfAttorney/cac:AgentParty/cac:PartyIdentification/cbc:ID/@schemeID)"/>
    <let name="a" value="substring($nitwithout,1,1)"/>
    <let name="b" value="substring($nitwithout,2,1)"/>
    <let name="c" value="substring($nitwithout,3,1)"/>
    <let name="d" value="substring($nitwithout,4,1)"/>
    <let name="e" value="substring($nitwithout,5,1)"/>
    <let name="f" value="substring($nitwithout,6,1)"/>
    <let name="g" value="substring($nitwithout,7,1)"/>
    <let name="h" value="substring($nitwithout,8,1)"/>
    <let name="i" value="substring($nitwithout,9,1)"/>
    <let name="j" value="(number($a) * 41) + (number($b) * 37) + (number($c) * 29) + (number($d) * 23) + (number($e) * 19) + (number($f) * 17) + (number($g) * 13) + (number($h) * 7) + (number($i) * 3)"/>
    <let name="k" value="$j mod 11"/>
    <let name="dv" value="if ($k &gt;= 2) then 11 - $k else $k"/>
    <assert flag="fatal" test="if(@schemeName = '31') then $dv = ./@schemeID else true()">[HD04b]-DV del NIT Mandante : '<value-of select="@schemeID"/>' no está correctamente calculado : '<value-of select="$dv"/>'</assert>
    <assert flag="fatal" test="if(@schemeName = '31') then exists(./@schemeID) else true()">[HD05]- (R) NIT Mandante debe ser informado con dígito verificador (@schemeName debe ser “32”)</assert>
  </rule>
  <!-- Validaciones sobre el Precio-->
  <rule flag="fatal" role="fatal" context="cac:Price">
    <assert flag="fatal" test="exists(cbc:BaseQuantity/@unitCode)">[FB04]- (R) La unidad de la cantidad utilizada no existe en la lista de unidades del apartado 6.3.6</assert>
  </rule>
</pattern>
